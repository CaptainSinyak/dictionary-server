{
    "html": "Стандартизированный язык разметки документов во Всемирной паутине. Большинство веб-страниц содержат описание разметки на языке HTML. Язык HTML интерпретируется браузерами; полученный в результате интерпретации форматированный текст отображается на экране монитора компьютера или мобильного устройства.",
    "css": "Формальный язык описания внешнего вида документа (веб-страницы), написанного с использованием языка разметки",
    "javascript": "Мультипарадигменный язык программирования. Поддерживает объектно-ориентированный, императивный и функциональный стили. Обычно используется как встраиваемый язык для программного доступа к объектам приложений.",
    "движок_javascript": "Компьютерная программа, выполняющая код JavaScript.",
    "браузер": "Прикладное ПО для просмотра страниц, содержания веб-документов, компьютерных файлов и их каталогов; управления веб – приложениями; а также для решения других задач.",
    "v8": "Движок JavaScript с открытым исходным кодом, распространяемый по лицензии BSD. Разработан датским отделением компании Google.",
    "spidermonkey": "Первый движок JavaScript, написанный Бренданом Айком для браузера Netscapr Navigator. В настоящее является движком с открытым исходным кодом и поддерживается Mozilla Foundation.",
    "интерпретатор": "Программа или техническое средство, выполняющее интерпретацию, а также вид транслятора, осуществляющего пооперационную (покомандную) обработку и выполнение исходной программы или запроса. В отличие от компилятора, который осуществляет трансляцию всей программы высокого уровня в машинные коды один раз без ее выполнения (создает объектную программу), интерпретатор транслирует исходную программу команда за командой каждый раз при выполнении и не создает объектного модуля. За счет такого режима выполнение программы происходит медленнее, чем в случае ее обработки транслятором, однако при обработке интерпретатором программы выполняются сразу, без промежуточной стадии трансляции.",
    "парсер": "Программа, выполняющая процесс сопоставления линейной последовательности лексем (слов, токенов) естественного или формального языка с его формальной грамматикой (синтаксический анализ). Результатом является синтаксическое дерево.",
    "ast": "(Abstract syntax tree или Абстрактное синтаксическое дерево) - конечное помеченное ориентированное дерево, в котором внутренние вершины сопоставлены (помечены) с операторами языка программирования, а листья - с соответствующими операндами.",
    "байт-код": "Стандартное промежуточное представление, в которое может быть переведена компьютерная программа автоматическими средствами. По сравнению с исходным кодом, удобным для создания и чтения человеком, байт-код - это компактное представление программы, уже прошедшей синтаксический и семантический анализ. В нем в явном виде закодированы типы, области видимости и другие конструкции. С технической точки зрения байт-код представляет собой машинно-независимый код низкого уровня, генерируемый транслятором из исходного кода.",
    "машинный_код": "Система команд (набор кодов операций) конкретной вычислительной машины, которая интерпретируется непосредственно процессором или микропрограммами этой вычислительной машины.",
    "оптимизация_кода": "Различные методы преобразования кода ради улучшения его характеристик и повышения эффективности. Целью оптимизации является уменьшение объема кода, объема используемой программой оперативной памяти, ускорение работы программы, уменьшение количества операций ввода-вывода.",
    "деоптимизация_кода": "Механизм движка, обращающий интерпретацию инструкций байт-кода “вспять” в случае, если предположения, сделанные движком и положенные в основу оптимизации, в определенный момент времени перестали соответствовать действительности.",
    "кэш_вызовов": "Промежуточный буфер с быстрым доступом к нему, содержащий информацию о параметрах вызываемых функций в JavaScript, которая может быть запрошена с наибольшей вероятностью.",
    "скрытый_класс": "Специальная динамически изменяемая структура в интерпретаторе V8, создаваемая во время выполнения программы для каждого нового объекта и его каждого нового свойства, которая описывает место в памяти, в котором хранится информация о типе объекта и его свойствах. Позволяет эффективно хранить в памяти и обращаться к значениям свойств объектов JavaScript.",
    "jit-компиляция": "(Just-in-time compilation, динамическая компиляция), технология увеличения производительности программных систем, использующих байт-код, путём компиляции байт-кода в машинный код или в другой формат непосредственно во время работы программы. Таким образом достигается высокая скорость выполнения по сравнению с интерпретируемым байт-кодом (сравнимая с компилируемыми языками) за счёт увеличения потребления памяти (для хранения результатов компиляции) и затрат времени на компиляцию.",
    "сборщик_мусора": "Специальный автоматизированный процесс, периодически освобождающий память, удаляя объекты, которые уже не будут востребованы приложениями.",
    "профилирование": "Сбор характеристик работы программы, таких как время выполнения отдельных фрагментов (обычно подпрограмм), число верно предсказанных условных переходов, число кэш-промахов и т. д. Инструмент, используемый для анализа работы, называют профилировщиком или профайлером. Обычно выполняется совместно с оптимизацией программы.",
    "фронтенд": "Клиентская сторона пользовательского интерфейса к программно-аппаратной части сервиса.",
    "бэкенд": "Программно-аппаратная (серверная) часть сервиса.",
    "node.js": "Программная платформа, основанная на движке V8, превращающая JavaScript из узкоспециализированного языка в язык общего назначения. Node.js добавляет возможность JavaScript взаимодействовать с устройствами ввода-вывода через свой API, написанный на C++, подключать другие внешние библиотеки, написанные на разных языках, обеспечивая вызовы к ним из JavaScript-кода. Node.js применяется преимущественно на сервере, выполняя роль веб-сервера, но есть возможность разрабатывать на Node.js и десктопные оконные приложения (при помощи NW.js, AppJS или Electron для Linux, Windows и macOS) и даже программировать микроконтроллеры (например, tessel, low.js и espruino). В основе Node.js лежит событийно-ориентированное и асинхронное (или реактивное) программирование с неблокирующим вводом/выводом.",
    "deno": "Среда выполнения для JavaScript и TypeScript , основанная на движке V8 JavaScript и языке программирования Rust . Он был создан Райаном Далем , первоначальным создателем Node.js , и ориентирован на производительность. Об этом объявил Даль в 2018 году во время выступления «10 вещей, о которых я сожалею о Node.js». Deno явно берет на себя роль как среды выполнения, так и диспетчера пакетов в рамках одного исполняемого файла , вместо того, чтобы требовать отдельной программы управления пакетами.",
    "api": "(Application programming interface / Программный интерфейс приложения, интерфейс прикладного программирования) — описание способов (набор классов, процедур, функций, структур, констант), которыми одна компьютерная программа может взаимодействовать с другой программой. Обычно входит в описание какого-либо интернет-протокола, программного каркаса (фреймворка) или стандарта вызовов функций операционной системы. Часто реализуется отдельной программной библиотекой или сервисом операционной системы.",
    "ignition": "Современный интерпретатор V8",
    "turbofan": "Современный JIT-компилятор V8",
    "субд": "Совокупность программных и лингвистических средств общего или специального назначения, обеспечивающих управление созданием и использованием баз данных.",
    "mongodb": "Документоориентированная система управления базами данных, не требующая описания схемы таблиц. Считается одним из классических примеров NoSQL-систем, использует JSON-подобные документы и схему базы данных. Применяется в веб-разработке, в частности, в рамках JavaScript-ориентированного стека MEAN."    
}
